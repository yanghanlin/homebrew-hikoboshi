name: Bump utilities

on:
  schedule:
    # Run every day at 20:20 UTC (4:20 CST)
    - cron: '20 20 * * *'
  workflow_dispatch:

jobs:
  bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create bump branch
        run: |
          git checkout -b bump/utilities
      # TODO: Use `brew livecheck`
      - name: Check version
        id: check-version
        run: |
          version="$(curl -fsSL https://static.tree-diagram.site/utilities/version)"
          echo "version=$version" >> "$GITHUB_OUTPUT"
      # TODO: Avoid string manipulation
      - name: Update version (if required)
        shell: python
        run: |
          import os
          import re
          import subprocess
          version = "${{ steps.check-version.outputs.version }}"
          formulae = os.getenv("FORMULAE").strip().split("\n")
          for formula in formulae:
            with open(formula, "r") as file:
              lines = file.readlines()
            for i, line in enumerate(lines):
              if match := re.match(r'^\s*version\s+"(.*)"\s*$', line):
                current_version = match.group(1)
                break
            if current_version == version:
              print(f"Version is already up-to-date in {formula}")
              continue
            url_to_check = None
            for i, line in enumerate(lines):
              if "root_url" not in line:  # skip root_url in bottle config
                line = line.replace(current_version, version)
              if match := re.match(r'^\s*url\s+"(.*)"\s*$', line):
                url_to_check = match.group(1)
              elif match := re.match(r'^\s*sha256\s+"(.*)"\s*$', line):
                current_sha = match.group(1)
                sha = subprocess.run("curl -fsSL {} | shasum -a 256 | cut -d ' ' -f 1".format(url_to_check), shell=True, check=True, capture_output=True).stdout.decode().strip()
                line = line.replace(current_sha, sha)
              lines[i] = line
            with open(formula, "w") as file:
              file.writelines(lines)
            print(f"Updated version from {current_version} to {version} in {formula}")
        env:
          FORMULAE: |
            Formula/loginto.rb
      - name: Commit and push changes
        id: commit-push-changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if git commit -am "Bump utilities to ${{ steps.check-version.outputs.version }}"; then
            git push origin bump/utilities --force
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Create pull request (if not exist)
        if: steps.commit-push-changes.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Bump utilities to ${process.env.VERSION}`;
            const body = `This PR bumps utilities to version ${process.env.VERSION}.\n\n<sup>Generated by automated workflow run; view the [logs](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}) for details.</sup>`;
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:bump/utilities`,
            });
            if (pulls.length > 0) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pulls[0].number,
                title,
                body,
              });
              console.log(`Updated PR #${pulls[0].number}`);
            } else {
              await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base: 'main',
                head: 'bump/utilities',
                title,
                body,
              });
              console.log('Created PR');
            }
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        env:
          VERSION: ${{ steps.check-version.outputs.version }}
